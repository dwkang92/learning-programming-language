// 숫자형이 아닌 피연산자는 숫자형으로 변화합니다.
alert( +true ); // 1
alert( +"" );   // 0



let apples = "2";
let oranges = "3";
// 이항 덧셈 연산자가 적용되기 전에, 두 피연산자는 숫자형으로 변화합니다.
alert( +apples + +oranges ); // 5


// 증가·감소 연산자
// 숫자를 하나 늘리거나 줄이는 것은 자주 사용되는 연산입니다.
// 자바스크립트에서는 이런 연산을 해주는 연산자를 제공합니다.
// 증가(increment) 연산자 ++는 변수를 1 증가시킵니다.
// 감소(decrement) 연산자 --는 변수를 1 감소시킵니다.
// ++와-- 연산자는 변수 앞이나 뒤에 올 수 있습니다.
// counter++와 같이 피연산자 뒤에 올 때는, '후위형(postfix form)'이라고 부릅니다.
// ++counter와 같이 피연산자 앞에 올 때는, '전위형(prefix form)'이라고 부릅니다.
// 후위형과 전위형은 피연산자인 counter를 1만큼 증가시켜 준다는 점에서 동일한 일을 합니다.
// 두 형의 차이는 ++/--의 반환 값을 사용할 때 드러납니다.
// 자, 다시 상기해 보도록 합시다. 이미 배운 바와 같이 모든 연산자는 값을 반환합니다. 
// 증가/감소 연산자도 마찬가지입니다. 전위형은 증가/감소 후의 새로운 값을 반환하는 반면, 후위형은 증가/감소 전의 기존 값을 반환합니다.
// 아래 예시를 통해 차이점을 직접 살펴보도록 합시다.
// 반환 값을 사용하지 않는 경우라면, 전위형과 후위형엔 차이가 없습니다.
// 값을 증가시키고 난 후, 증가한 값을 바로 사용하려면 전위형 증가 연산자를 사용하면 됩니다.
// 값을 증가시키지만, 증가 전의 기존값을 사용하려면 후위형 증가 연산자를 사용하면 됩니다.

